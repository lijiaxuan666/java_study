<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="runner" class="org.apache.commons.dbutils.QueryRunner"></bean>

    <bean id="accountDao" class="dao.AccountDaoImpl">
        <property name="runner" ref="runner"></property>
        <property name="connectionUtil" ref="connectionUtil"></property>
    </bean>

    <bean id="accountServcie" class="service.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
        <property name="transactionManager" ref="transactionManager"></property>
    </bean>

    <bean id="connectionUtil" class="utils.ConnectionUtil">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="DriverClass" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/eesy?serverTimezone=Asia/Shanghai"></property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
    </bean>

    <bean id="transactionManager" class="utils.TransactionManager">
        <property name="connectionUtil" ref="connectionUtil"></property>
    </bean>

    <!-- 为Logger类注入事务工具类，使其能控制事务 -->
    <bean id="logger" class="utils.Logger">
        <property name="transactionManager" ref="transactionManager"></property>
    </bean>

    <aop:config>
        <!-- 配置切入点表达式 id属性用于指定表达式的唯一标识。expression属性用于指定表达式内容
              它写在aop:aspect外面时，此时就变成了所有切面可用
          -->
        <aop:pointcut id="pt1" expression="execution(* service.*.*(..))"/>
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置环绕通知-->
            <aop:around method="aroundPringLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>

    <!--上面是环绕通知，需要自己写个通知类，这个直接在配置文件中完成即可
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* service.*.*(..))"/>

        <aop:aspect id="txAdvice" ref="transactionManager">
            前置通知——开启事务
            <aop:before method="begin()" pointcut-ref="pt1"></aop:before>
            后置通知——提交事务
            <aop:after-returning method="commit()" pointcut-ref="pt1"></aop:after-returning>
            异常通知——回滚事务
            <aop:after-throwing method="rollback()" pointcut-ref="pt1"></aop:after-throwing>
            最终通知——释放连接
            <aop:after method="release" pointcut-ref="pt1"></aop:after>
        </aop:aspect>
    </aop:config>
    -->
</beans>